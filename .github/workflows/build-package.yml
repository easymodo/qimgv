name: msys2 dev-latest
on:
  workflow_dispatch:
    inputs:
      use_ucrt:
        description: "Use UCRT64 instead of MINGW64?"
        type: choice
        default: 'false'
        options:
          - 'true'
          - 'false'

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ inputs.use_ucrt == 'true' && 'UCRT64' || 'MINGW64' }}
          update: true
          install: git p7zip

      - uses: actions/checkout@v4
        with:
          #ref: dev
          fetch-depth: 0

      - id: build
        name: CI-Build
        env:
          USE_UCRT: ${{ inputs.use_ucrt == 'true' && '1' || '0' }}
        run: |
          export BUILD_NAME="qimgv-$([[ "$USE_UCRT" == 1 ]] && echo ucrt-)x64_$(git describe --tags)"
          echo "build_name=${BUILD_NAME}" >> $GITHUB_OUTPUT
          echo "build_file_name=${BUILD_NAME}.7z" >> $GITHUB_OUTPUT
          ./scripts/build-qimgv.sh
          pwd
          ls -al
          echo "running: 7z a qimgv-x64.7z ./${BUILD_NAME}"
          7z a qimgv-x64.7z ./${BUILD_NAME}
      - uses: actions/upload-artifact@v4
        with:
          name: qimgv-build
          path: qimgv-x64.7z

    outputs:
       build_name: ${{ steps.build.outputs.build_name }}
       build_file_name: ${{ steps.build.outputs.build_file_name }}

  upload-release:
    runs-on: ubuntu-latest
    needs: build
    steps:
       #- run: echo "${{ needs.build.outputs.build_name }}"
       - uses: actions/download-artifact@v4
         with:
           name: qimgv-build

       - name: Rename archive
         run: mv qimgv-x64.7z "${{ needs.build.outputs.build_file_name }}"

       - uses: softprops/action-gh-release@v2
         #if: startsWith(github.ref, 'refs/tags/')
         with:
           files: ${{ needs.build.outputs.build_file_name }}
           prerelease: true
           tag_name: latest-dev
           name: ${{ needs.build.outputs.build_name }}
           body: "Automated build"
